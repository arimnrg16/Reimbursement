// <auto-generated />
using System;
using ExtCore.Data.EntityFramework.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Backend.WebApp.Migrations
{
    [DbContext(typeof(StorageContext))]
    [Migration("20190715071518_AddReimbursement")]
    partial class AddReimbursement
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Employees.Data.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("DeleteBy");

                    b.Property<DateTimeOffset?>("Deleted");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset?>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Reimburses.Data.Entities.QuickLeave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset>("Date")
                        .HasMaxLength(20);

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset>("FinishTime")
                        .HasMaxLength(25);

                    b.Property<DateTimeOffset?>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(64);

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("RequestTo")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset>("StartTime")
                        .HasMaxLength(20);

                    b.Property<DateTimeOffset>("TotalOvertime")
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.ToTable("QuickLeaves");
                });

            modelBuilder.Entity("Reimburses.Data.Entities.RequestBusinesstrip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset>("DateBusinessTrip")
                        .HasMaxLength(25);

                    b.Property<string>("From")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset?>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(64);

                    b.Property<int>("ProofAttachment")
                        .HasMaxLength(25);

                    b.Property<string>("To")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<decimal>("TotalCostNominal")
                        .HasMaxLength(10);

                    b.Property<decimal>("TotalCostReimburse")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("RequestBusinesstrips");
                });

            modelBuilder.Entity("Reimburses.Data.Entities.RequestMedical", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset>("DateRequestMedical");

                    b.Property<string>("MedicationType")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset?>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(64);

                    b.Property<int>("ProofAttach")
                        .HasMaxLength(25);

                    b.Property<int>("TotalCostNominal")
                        .HasMaxLength(10);

                    b.Property<int>("TotalCostReimburse")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("RequestMedicals");
                });

            modelBuilder.Entity("Reimburses.Data.Entities.RequestOvertime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset>("DateOvertime")
                        .HasMaxLength(25);

                    b.Property<string>("DepartementOrGroup")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset>("FinishTime")
                        .HasMaxLength(25);

                    b.Property<int>("MealReimbursement")
                        .HasMaxLength(10);

                    b.Property<DateTimeOffset?>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(64);

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int>("ProofAttcahment")
                        .HasMaxLength(25);

                    b.Property<string>("RequestTo")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<DateTimeOffset>("StartTime")
                        .HasMaxLength(25);

                    b.Property<DateTimeOffset>("TotalOvertime")
                        .HasMaxLength(25);

                    b.Property<int>("TransportReimbursement")
                        .HasMaxLength(10);

                    b.Property<string>("TypeReimbursement")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("RequestOvertimes");
                });

            modelBuilder.Entity("Timesheets.Data.Entities.Timesheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset>("EndTime");

                    b.Property<DateTimeOffset?>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset>("StartTime");

                    b.Property<DateTimeOffset>("TimesheetDate");

                    b.Property<string>("TimesheetStatus")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<int>("TotalHour");

                    b.HasKey("Id");

                    b.ToTable("Timesheets");
                });

            modelBuilder.Entity("Timesheets.Data.Entities.TimesheetTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset?>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(64);

                    b.Property<int>("OnSprint");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("TaskStatus")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<int>("TimesheetId");

                    b.HasKey("Id");

                    b.HasIndex("TimesheetId");

                    b.ToTable("TimesheetTasks");
                });

            modelBuilder.Entity("Timesheets.Data.Entities.TimesheetTask", b =>
                {
                    b.HasOne("Timesheets.Data.Entities.Timesheet", "Timesheet")
                        .WithMany("TimesheetTasks")
                        .HasForeignKey("TimesheetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
